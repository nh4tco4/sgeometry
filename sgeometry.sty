\ProvidesPackage{sgeometry}
\RequirePackage{tikz}
\RequirePackage{ifthen}
\RequirePackage{xkeyval}
\RequirePackage{etoolbox}

\define@key{sgeometry}{shape}{\def\sg@shape{#1}}
\define@key{sgeometry}{label}{\def\sg@label{#1}}
\define@key{sgeometry}{offset}{\def\sg@offset{#1}}
\define@key{sgeometry}{style}{\def\sg@style{#1}}
\define@key{sgeometry}{count}{\def\sg@count{#1}}
\define@key{sgeometry}{shift}{\def\sg@shift{#1}}
\define@key{sgeometry}{fill}{\def\sg@fill{#1}}
\define@key{sgeometry}{color}{\def\sg@color{#1}}
\define@key{sgeometry}{fillopacity}{\def\sg@fillopacity{#1}}
\define@key{sgeometry}{radius}{\def\sg@radius{#1}}

\newcommand{\Angle}[4][]{%
    \def\sg@label{}%
    \def\sg@offset{0mm}%
    \def\sg@style{black}%
    \def\sg@count{1}%
    \def\sg@shift{0,0}%
    \def\sg@fill{}%
    \def\sg@fillopacity{0.1}%
    \setkeys{sgeometry}{#1}%
    \ifx\sg@fill\empty%
      \foreach \i in {1,...,\sg@count} {%
          \pgfmathsetmacro{\radius}{0.6cm + (\i - 1)*0.2cm + \sg@offset}%
          \draw[\sg@style] pic[draw, angle radius=\radius] {angle=#2--#3--#4};%
      }%
    \else%
      \foreach \i in {\sg@count,...,1} {%
          \pgfmathsetmacro{\radius}{0.6cm + (\i-1)*0.2cm + \sg@offset}%
          \draw[\sg@style] pic[draw, angle radius=\radius, fill=\sg@fill, fill opacity=\sg@fillopacity] {angle=#2--#3--#4};%
      }%
    \fi
    \ifx\sg@label\empty \else%
      \node[\sg@style] at ($(#3) + (\sg@shift)$) {\sg@label};
}

\newcommand{\RightAngle}[4][]{%
    \def\sg@offset{0mm}%
    \def\sg@style{black}%
    \def\sg@fill{}%
    \setkeys{sgeometry}{#1}%
    \pgfmathsetmacro{\radius}{0.6cm + \sg@offset}%
    \ifdefempty{\sg@fill}{%
      \draw[\sg@style] pic[draw, angle radius=\radius] {right angle=#2--#3--#4};%
    }{%
      \tikzset{pics/right angle/.style={angle radius=\radius, draw, fill=\sg@fill}}%
      \draw[\sg@style] pic {right angle=#2--#3--#4};%
    }%
}

\newcommand{\MarkSide}[3][]{%
  \def\sg@style{black}%
  \def\sg@shape{single line}%
  \setkeys{sgeometry}{#1}%

  \ifcsstring{sg@shape}{single line}{%
    \def\sg@mark@code{\draw[line width=1pt] (0,-5pt) -- (0,5pt);}%
  }{%
    \ifcsstring{sg@shape}{double line}{%
      \def\sg@mark@code{%
        \draw[line width=1pt] (-2pt,-5pt) -- (-2pt,5pt);
        \draw[line width=1pt] ( 2pt,-5pt) -- ( 2pt,5pt);
      }%
    }{%
      \ifcsstring{sg@shape}{triple line}{%
        \def\sg@mark@code{%
          \draw[line width=0.8pt] (-3pt,-5pt) -- (-3pt,5pt);
          \draw[line width=0.8pt] ( 0pt,-5pt) -- ( 0pt,5pt);
          \draw[line width=0.8pt] ( 3pt,-5pt) -- ( 3pt,5pt);
        }%
      }{%
        \ifcsstring{sg@shape}{vee}{%
          \def\sg@mark@code{\draw[line width=1pt] (-3pt, 3pt) -- (0pt, -3pt) -- (3pt, 3pt);}%
        }{%
          \ifcsstring{sg@shape}{wave}{%
            \def\sg@mark@code{\draw[line width=1pt] (-5pt, 0pt) .. controls (-2.5pt, 7pt) and (2.5pt, -7pt) .. (5pt, 0pt);}%
          }{%

             \def\sg@mark@code{\PackageWarningNoLine{sgeometry}{Unknown shape '\csname sg@shape\endcsname' requested for MarkSide}}%
          }%
        }%
      }%
    }%
  }%

  \path[\sg@style,%
    decoration={markings,
      mark=at position 0.5 with {\sg@mark@code}%
    },
    postaction={decorate}%
  ] (#2) -- (#3);%
}

\newcommand{\Point}[2][] {%
  \def\sg@color{red}%
  \def\sg@radius{2pt}%
  \setkeys{sgeometry}{#1}%
  \foreach \point in {#2} {%
    \fill[\sg@color] (\point) circle (\sg@radius);%
  }%
}

\endinput
